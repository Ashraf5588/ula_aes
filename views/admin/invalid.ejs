<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Invalid Credentials | Answer Analysis System</title>
  
  <!-- Google Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Lexend:wght@100..900&display=swap" rel="stylesheet">
  
  <!-- Font Awesome -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet"/>
  
  <style>
    :root {
      --primary: #0ea5e9;  /* skyblue */
      --primary-dark: #0284c7;  /* darker skyblue */
      --secondary: #8b5a2b;  /* brown */
      --secondary-dark: #6b4423;  /* darker brown */
      --accent: #a16207;  /* amber brown for accent */
      --light: #f8fafc;
      --dark: #1e293b;
      --gray: #64748b;
      --error: #ef4444;
      --error-light: #fef2f2;
      --error-dark: #dc2626;
      --shadow-sm: 0 1px 3px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.06);
      --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
      --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
      --transition: all 0.3s ease;
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Lexend', sans-serif;
      background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 2rem;
      color: var(--dark);
    }

    .error-container {
      background: white;
      border-radius: 20px;
      box-shadow: var(--shadow-lg);
      padding: 3rem;
      text-align: center;
      max-width: 500px;
      width: 100%;
      position: relative;
      overflow: hidden;
    }

    .error-container::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 6px;
      background: linear-gradient(to right, var(--primary), var(--secondary));
    }

    .error-icon {
      width: 100px;
      height: 100px;
      margin: 0 auto 2rem;
      background: linear-gradient(135deg, var(--error), var(--error-dark));
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-size: 3rem;
      animation: shake 0.6s ease-in-out;
    }

    @keyframes shake {
      0%, 100% { transform: translateX(0); }
      25% { transform: translateX(-5px); }
      75% { transform: translateX(5px); }
    }

    .error-title {
      font-size: 2rem;
      font-weight: 700;
      color: var(--dark);
      margin-bottom: 1rem;
      line-height: 1.2;
    }

    .error-message {
      font-size: 1.1rem;
      color: var(--gray);
      margin-bottom: 2.5rem;
      line-height: 1.6;
    }

    .action-buttons {
      display: flex;
      flex-direction: column;
      gap: 1rem;
      margin-top: 2rem;
    }

    .btn {
      padding: 1rem 2rem;
      border: none;
      border-radius: 12px;
      font-size: 1rem;
      font-weight: 600;
      text-decoration: none;
      transition: var(--transition);
      cursor: pointer;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
    }

    .btn-primary {
      background: linear-gradient(135deg, var(--primary), var(--primary-dark));
      color: white;
      box-shadow: var(--shadow-md);
    }

    .btn-primary:hover {
      background: linear-gradient(135deg, var(--primary-dark), var(--primary));
      transform: translateY(-2px);
      box-shadow: var(--shadow-lg);
      color: white;
      text-decoration: none;
    }

    .btn-secondary {
      background: linear-gradient(135deg, var(--secondary), var(--secondary-dark));
      color: white;
      box-shadow: var(--shadow-md);
    }

    .btn-secondary:hover {
      background: linear-gradient(135deg, var(--secondary-dark), var(--secondary));
      transform: translateY(-2px);
      box-shadow: var(--shadow-lg);
      color: white;
      text-decoration: none;
    }

    .btn-outline {
      background: transparent;
      color: var(--gray);
      border: 2px solid var(--gray);
    }

    .btn-outline:hover {
      background: var(--gray);
      color: white;
      transform: translateY(-2px);
      text-decoration: none;
    }

    .divider {
      margin: 1.5rem 0;
      text-align: center;
      position: relative;
    }

    .divider::before {
      content: '';
      position: absolute;
      top: 50%;
      left: 0;
      right: 0;
      height: 1px;
      background: linear-gradient(to right, transparent, var(--gray), transparent);
    }

    .divider span {
      background: white;
      padding: 0 1rem;
      color: var(--gray);
      font-size: 0.9rem;
    }

    .logo-section {
      margin-bottom: 2rem;
      padding-bottom: 1.5rem;
      border-bottom: 1px solid rgba(0, 0, 0, 0.1);
    }

    .logo {
      width: 60px;
      height: 60px;
      margin: 0 auto 1rem;
      background: linear-gradient(135deg, var(--primary), var(--secondary));
      border-radius: 15px;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-size: 1.8rem;
    }

    .brand-name {
      font-size: 1.2rem;
      font-weight: 700;
      color: var(--dark);
      margin-bottom: 0.5rem;
    }

    .brand-subtitle {
      font-size: 0.9rem;
      color: var(--gray);
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .error-container {
        padding: 2rem;
        margin: 1rem;
      }

      .error-title {
        font-size: 1.5rem;
      }

      .error-message {
        font-size: 1rem;
      }

      .action-buttons {
        gap: 0.75rem;
      }

      .btn {
        padding: 0.875rem 1.5rem;
        font-size: 0.9rem;
      }
    }

    @media (max-width: 480px) {
      body {
        padding: 1rem;
      }

      .error-container {
        padding: 1.5rem;
      }

      .error-icon {
        width: 80px;
        height: 80px;
        font-size: 2.5rem;
      }

      .error-title {
        font-size: 1.3rem;
      }
    }

    /* Animation for buttons */
    .btn:active {
      transform: translateY(0);
    }

    /* Focus states for accessibility */
    .btn:focus {
      outline: 3px solid rgba(14, 165, 233, 0.3);
      outline-offset: 2px;
    }
  </style>
</head>
<body>
  <div class="error-container">
    <!-- Logo Section -->
    <div class="logo-section">
      <div class="logo">
        <i class="fas fa-graduation-cap"></i>
      </div>
      <div class="brand-name">Answer Analysis System</div>
      <div class="brand-subtitle">Authentication Error</div>
    </div>

    <!-- Error Icon -->
    <div class="error-icon">
      <i class="fas fa-exclamation-triangle"></i>
    </div>

    <!-- Error Content -->
    <h1 class="error-title">Invalid Username or Password</h1>
    <p class="error-message">
      The username or password you entered doesn't match our records. 
      Please check your credentials and try again.
    </p>

    <!-- Action Buttons -->
    <div class="action-buttons">
      <a href="javascript:history.back()" class="btn btn-primary">
        <i class="fas fa-arrow-left"></i>
        Try Again
      </a>
      
  
      <a href="/" class="btn btn-outline">
        <i class="fas fa-home"></i>
        Back to Home
      </a>
    </div>
  </div>

  <!-- Add some interactive behavior -->
  <script>
    // Auto-focus on the try again button
    document.addEventListener('DOMContentLoaded', function() {
      const tryAgainBtn = document.querySelector('.btn-primary');
      if (tryAgainBtn) {
        tryAgainBtn.focus();
      }
    });

    // Add click feedback
    document.querySelectorAll('.btn').forEach(btn => {
      btn.addEventListener('click', function() {
        this.style.transform = 'translateY(0)';
        setTimeout(() => {
          this.style.transform = '';
        }, 150);
      });
    });

    // Auto-redirect after 30 seconds (optional)
    let countdown = 30;
    const autoRedirect = setInterval(() => {
      countdown--;
      if (countdown <= 0) {
        clearInterval(autoRedirect);
        window.history.back();
      }
    }, 1000);
  </script>
</body>
</html>