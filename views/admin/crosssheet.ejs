<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Cross Sheet | Answer Analysis System</title>
  
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Lexend:wght@100..900&display=swap" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet"/>
  
  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <!-- DataTables CSS -->
  <link rel="stylesheet" href="https://cdn.datatables.net/1.13.5/css/dataTables.bootstrap5.min.css">
  <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.4.1/css/buttons.bootstrap5.min.css">
  <!-- Navigation CSS -->
  <link rel="stylesheet" href="/nav.css">
  
  <!-- Custom CSS for skyblue/brown theme -->
  <style>
    :root {
      --primary: #0ea5e9;  /* skyblue */
      --primary-dark: #0284c7;  /* darker skyblue */
      --secondary: #8b5a2b;  /* brown */
      --secondary-dark: #6b4423;  /* darker brown */
      --accent: #a16207;  /* amber brown for accent */
      --light: #f8fafc;
      --dark: #1e293b;
      --gray: #64748b;
      --success: #22c55e;
      --error: #ef4444;
      --warning: #f59e0b;
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Lexend', sans-serif;
      background: linear-gradient(135deg, var(--light) 0%, #e2e8f0 100%);
      color: var(--dark);
      min-height: 100vh;
    }

    .main-container {
      display: flex;
      min-height: 100vh;
    }

    .content-area {
      flex: 1;
      margin-left: 0;
      transition: margin-left 0.3s ease;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
    }

    .content-area.sidebar-open {
      margin-left: 300px;
    }

    .header {
      background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
      color: white;
      padding: 1.5rem 2rem;
      position: sticky;
      top: 0;
      z-index: 900;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }

    .header-content {
      display: flex;
      justify-content: space-between;
      align-items: center;
      max-width: 1400px;
      margin: 0 auto;
    }

    .menu-toggle {
      background: none;
      border: none;
      color: white;
      font-size: 1.5rem;
      cursor: pointer;
      padding: 0.5rem;
      border-radius: 8px;
      transition: background-color 0.2s;
    }

    .menu-toggle:hover {
      background-color: rgba(255, 255, 255, 0.1);
    }

    .header h1 {
      font-size: 1.8rem;
      font-weight: 700;
      margin: 0;
    }

    .breadcrumb {
      font-size: 0.9rem;
      color: rgba(255, 255, 255, 0.8);
      margin-top: 0.25rem;
    }

    .main-content {
      flex: 1;
      padding: 2rem;
      max-width: 1400px;
      margin: 0 auto;
      width: 100%;
    }

    .card {
      border: none;
      border-radius: 16px;
      box-shadow: 0 10px 25px -3px rgba(0, 0, 0, 0.1);
      margin-bottom: 2rem;
      overflow: hidden;
      background: white;
      border: 1px solid rgba(14, 165, 233, 0.1);
    }
    
    .card-header {
      background: linear-gradient(135deg, var(--secondary) 0%, var(--secondary-dark) 100%);
      color: white;
      font-weight: 600;
      border: none;
      padding: 1.5rem;
    }

    .card-header h3 {
      margin: 0;
      font-size: 1.25rem;
      font-weight: 600;
      display: flex;
      align-items: center;
      gap: 0.75rem;
    }

    .card-body {
      padding: 2rem;
    }
    
    .form-select {
      border: 2px solid #e2e8f0;
      border-radius: 8px;
      padding: 0.875rem 1rem;
      font-size: 1rem;
      box-shadow: none;
      transition: all 0.3s ease;
      background: white;
    }
    
    .form-select:focus {
      border-color: var(--primary);
      box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.1);
      outline: none;
    }
    
    .btn-primary {
      background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
      border: none;
      padding: 0.875rem 2rem;
      border-radius: 8px;
      color: white;
      font-weight: 600;
      font-size: 1rem;
      cursor: pointer;
      transition: all 0.2s ease;
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
    }

    .btn-primary:hover {
      transform: translateY(-1px);
      box-shadow: 0 10px 20px -5px rgba(14, 165, 233, 0.3);
    }
    
    .btn-secondary {
      background: linear-gradient(135deg, var(--secondary) 0%, var(--secondary-dark) 100%);
      border: none;
      color: white;
    }
    
    .btn-secondary:hover {
      background: linear-gradient(135deg, var(--secondary-dark) 0%, var(--secondary) 100%);
    }
    
    .term-selector {
      padding: 1.5rem;
      background: rgba(14, 165, 233, 0.05);
      border-radius: 12px;
      border-left: 4px solid var(--primary);
      margin: 1.5rem 0;
    }

    .term-selector h4 {
      color: var(--dark);
      margin-bottom: 1rem;
      font-size: 1.1rem;
      font-weight: 600;
    }
    
    .term-option {
      display: inline-block;
      padding: 0.75rem 1.5rem;
      margin-right: 0.75rem;
      margin-bottom: 0.5rem;
      background: white;
      border: 2px solid #e2e8f0;
      border-radius: 8px;
      cursor: pointer;
      transition: all 0.2s ease;
      color: var(--gray);
      font-weight: 500;
      text-decoration: none;
    }
    
    .term-option:hover, .term-option.active {
      background: var(--primary);
      border-color: var(--primary);
      color: white;
      transform: translateY(-1px);
    }
    
    table.dataTable {
      width: 100% !important;
      margin-bottom: 20px !important;
      border-collapse: separate !important;
      border-spacing: 0;
      border-radius: 12px;
      overflow: hidden;
    }
    
    table.dataTable thead th {
      background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
      color: white;
      border-bottom: none !important;
      font-weight: 600;
      padding: 1rem;
      position: relative;
      transition: all 0.3s ease;
      font-size: 0.9rem;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }
    
    table.dataTable thead th:hover {
      background: linear-gradient(135deg, var(--primary-dark) 0%, var(--primary) 100%);
    }
    
    table.dataTable tbody td {
      padding: 1rem;
      border-bottom: 1px solid #e2e8f0;
      color: var(--gray);
    }
    
    table.dataTable tbody tr:nth-of-type(odd) {
      background-color: rgba(14, 165, 233, 0.02);
    }
    
    table.dataTable tbody tr:hover {
      background-color: rgba(14, 165, 233, 0.08);
    }
    
    .dt-buttons {
      margin-bottom: 1.5rem;
    }

    .dt-button {
      background: linear-gradient(135deg, var(--secondary) 0%, var(--secondary-dark) 100%);
      border: none;
      color: white;
      padding: 0.5rem 1rem;
      border-radius: 6px;
      margin-right: 0.5rem;
      font-weight: 500;
      transition: all 0.2s ease;
    }

    .dt-button:hover {
      transform: translateY(-1px);
      box-shadow: 0 4px 8px rgba(139, 90, 43, 0.3);
    }
    
    .dataTables_filter input {
      border: 2px solid #e2e8f0;
      border-radius: 8px;
      padding: 0.5rem 1rem;
      margin-left: 0.5rem;
    }

    .dataTables_filter input:focus {
      border-color: var(--primary);
      outline: none;
    }

    .empty-state {
      text-align: center;
      padding: 4rem 2rem;
      color: var(--gray);
    }

    .empty-state i {
      font-size: 4rem;
      color: var(--primary);
      margin-bottom: 1.5rem;
      opacity: 0.5;
    }

    .empty-state h3 {
      font-size: 1.5rem;
      margin-bottom: 1rem;
      color: var(--dark);
    }

    .empty-state p {
      font-size: 1.1rem;
      margin-bottom: 0;
    }
    
    /* Mobile Responsive */
    @media (max-width: 768px) {
      .content-area.sidebar-open {
        margin-left: 0;
      }

      .header {
        padding: 1rem;
      }

      .header h1 {
        font-size: 1.5rem;
      }

      .main-content {
        padding: 1rem;
      }

      .card-body {
        padding: 1.5rem;
      }

      .term-selector {
        padding: 1rem;
      }

      .term-option {
        padding: 0.5rem 1rem;
        margin-right: 0.5rem;
        font-size: 0.9rem;
      }

      table.dataTable thead th,
      table.dataTable tbody td {
        padding: 0.75rem 0.5rem;
        font-size: 0.875rem;
      }

      .dt-buttons {
        text-align: center;
      }

      .dt-button {
        padding: 0.375rem 0.75rem;
        font-size: 0.875rem;
        margin-bottom: 0.5rem;
      }
    }

    @media (max-width: 480px) {
      .header-content {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.5rem;
      }

      .card-body {
        padding: 1rem;
      }

      .term-option {
        display: block;
        margin-right: 0;
        margin-bottom: 0.75rem;
        text-align: center;
      }

      table.dataTable {
        font-size: 0.8rem;
      }

      table.dataTable thead th,
      table.dataTable tbody td {
        padding: 0.5rem 0.25rem;
      }
    }

    /* For optgroup styling in select */
    optgroup {
      font-weight: bold;
      font-style: normal;
      background-color: rgba(14, 165, 233, 0.1);
      color: var(--dark);
      padding: 5px;
    }
    
    option {
      font-weight: normal;
      padding: 5px;
    }
  </style>
</head>
<body>
  <%- include('../partials/nav',{currentPage:'admin'}) %>
  
  <div class="main-container">
    <!-- Include Sidenav -->
    <%- include('../partials/sidenav', { 
      subjects: subjects || [],
      studentClassdata: studentClassdata || [],
      terminals: terminals || []
    }) %>

    <div class="content-area" id="content-area">
      <!-- Header -->
      <div class="header">
        <div class="header-content">
          <div class="header-left">
            <button class="menu-toggle" onclick="toggleSidebar()">
              <i class="fas fa-bars"></i>
            </button>
            <div>
              <h1>Cross Sheet Analysis</h1>
              <div class="breadcrumb">Admin Dashboard / Cross Sheet</div>
            </div>
          </div>
        </div>
      </div>

      <!-- Main Content -->
      <div class="main-content">
 
  <!-- Header Section -->
  <header class="page-header">
    <div class="container">
      <div class="row align-items-center">
        <div class="col-md-8">
          <h1><i class="fas fa-table me-2"></i> Markslip</h1>
          <p class="lead mb-0">Comprehensive view of student performance data</p>
        </div>
        <div class="col-md-4 text-end">
          <nav aria-label="breadcrumb">
            <ol class="breadcrumb justify-content-end mb-0">
              <li class="breadcrumb-item"><a href="/admin/term/FIRST" class="text-white">Admin Dashboard</a></li>
              <li class="breadcrumb-item active" aria-current="page">MarksSlip</li>
            </ol>
          </nav>
        </div>
      </div>
    </div>
  </header>

  <div class="container">
    <!-- Table Data Section -->
        <% if (sortedMarkslip && sortedMarkslip.length > 0) { %>
          <div class="card">
            <div class="card-header">
              <h3>
                <i class="fas fa-table"></i>
                Student Performance Data
              </h3>
            </div>
            <div class="card-body">
              <div class="table-responsive">
                <table id="crossSheetTable" class="table table-striped table-hover" style="width:100%">
                  <thead>
                    <tr>
                      <th>Name</th>
                      <th>Roll</th>
                      <th>Class</th>
                      <th>Section</th>
                      <th>Final Marks</th>
                      <th>Original Marks</th>
                      <th>Subject</th>
                    </tr>
                  </thead>
                  <tbody>
                    <% sortedMarkslip.forEach(student => { %>
                      <tr>
                        <td><%= student.name %></td>
                        <td><%= student.roll %></td>
                        <td><%= student.studentClass %></td>
                        <td><%= student.section %></td>
                        <td>
                          <% 
                            const subject = student.subject;
                            const marks = Math.ceil(student.totalMarks);
                            const studentClass = student.studentClass;
                            
                            const isSpecialSubject = (subject === "Computer" && studentClass !== '9' && studentClass !== '10' || subject === "Opt.Math" && studentClass !== '9' && studentClass !== '10'|| subject === "Delight");

                            if (!isSpecialSubject) {
                              if (marks >= 15 && marks <= 18) {
                          %>
                                18
                          <% 
                              } else { 
                          %>
                                <%= marks %>
                          <% 
                              } 
                            } else {
                              if (marks >= 7 && marks <= 9) {
                          %>
                                9
                          <%
                              } else { 
                          %>
                                <%= marks %>
                          <% 
                              } 
                            } 
                          %>
                        </td>
                        <td><%= student.totalMarks %></td>
                        <td><%= student.subject %></td>
                      </tr>
                    <% }); %>
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        <% } else { %>
          <div class="card">
            <div class="card-body">
              <div class="empty-state">
                <i class="fas fa-table"></i>
                <h3>No Data Available</h3>
                <p>Please select a class, subject, and term to view student performance data.</p>
              </div>
            </div>
          </div>
        <% } %>

        <!-- Selection Controls -->
        <div class="card">
          <div class="card-header">
            <h3>
              <i class="fas fa-filter"></i>
              Filter Options
            </h3>
          </div>
          <div class="card-body">
            <div class="row g-3">
              <div class="col-md-6">
                <label for="subjectClass" class="form-label fw-bold">Select Class & Subject</label>
                <select name="subjectClass" id="subjectClass" class="form-select">
                  <option value="" selected disabled>--Choose a Class and Subject--</option>
                  <% 
                    // Group subjects by class and section
                    const classSubjectMap = {};
                    
                    // First, get all unique class-section combinations
                    if (sortedClassList) {
                      sortedClassList.forEach(classInfo => {
                        const key = `${classInfo.studentClass}-${classInfo.section}`;
                        if (!classSubjectMap[key]) {
                          classSubjectMap[key] = {
                            studentClass: classInfo.studentClass,
                            section: classInfo.section,
                            subjects: []
                          };
                        }
                      });
                    }
                    
                    // Then, populate subjects for each class
                    if (sortedsubjectlist) {
                      sortedsubjectlist.forEach(subject => {
                        const key = `${subject.forClass}-`;
                        // Find all sections for this class and add the subject
                        Object.keys(classSubjectMap).forEach(mapKey => {
                          if (mapKey.startsWith(key)) {
                            const existingSubject = classSubjectMap[mapKey].subjects.find(s => s.subject === subject.subject);
                            if (!existingSubject) {
                              classSubjectMap[mapKey].subjects.push(subject);
                            }
                          }
                        });
                      });
                    }
                    
                    // Sort classes numerically
                    const sortedKeys = Object.keys(classSubjectMap).sort((a, b) => {
                      const classA = parseInt(a.split('-')[0]);
                      const classB = parseInt(b.split('-')[0]);
                      if (classA !== classB) return classA - classB;
                      return a.localeCompare(b);
                    });
                  %>
                  
                  <% sortedKeys.forEach(key => { 
                    const classData = classSubjectMap[key];
                    if (classData.subjects.length > 0) {
                  %>
                    <optgroup label="Class <%= classData.studentClass %> - <%= classData.section %>">
                      <% classData.subjects.forEach(subject => { %>
                        <option value="/crossheet?class=<%= classData.studentClass %>&section=<%= classData.section %>&subject=<%= subject.subject %>">
                          <%= subject.subject %>
                        </option>
                      <% }); %>
                    </optgroup>
                  <% 
                    }
                  }); %>
                </select>
              </div>
              <div class="col-md-6">
                <div class="term-selector">
                  <h4>Select Term</h4>
                  <div>
                    <% if (terminalList && terminalList.length > 0) { %>
                      <% terminalList.forEach((term) => { %>
                        <a href="#" class="term-option" data-term="<%= term.terminal %>" onclick="addTerminal('<%= term.terminal %>')">
                          <%= term.terminal %>
                        </a>
                      <% }); %>
                    <% } %>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Bootstrap & DataTables JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
  <script src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js"></script>
  <script src="https://cdn.datatables.net/1.13.5/js/dataTables.bootstrap5.min.js"></script>
  <!-- DataTables Buttons Extension for Column Copy -->
  <script src="https://cdn.datatables.net/buttons/2.4.1/js/dataTables.buttons.min.js"></script>
  <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.bootstrap5.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
  <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.html5.min.js"></script>
  <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.print.min.js"></script>
  <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.colVis.min.js"></script>

  <!-- Sidebar Toggle Script -->
  <script>
    function toggleSidebar() {
      const sidebar = document.querySelector('.sidebar');
      const contentArea = document.getElementById('content-area');
      
      sidebar.classList.toggle('active');
      
      if (window.innerWidth > 768) {
        contentArea.classList.toggle('sidebar-open');
      }
    }

    // Close sidebar on mobile when clicking outside
    document.addEventListener('click', function(event) {
      const sidebar = document.querySelector('.sidebar');
      const menuToggle = document.querySelector('.menu-toggle');
      
      if (window.innerWidth <= 768 && 
          !sidebar.contains(event.target) && 
          !menuToggle.contains(event.target) && 
          sidebar.classList.contains('active')) {
        sidebar.classList.remove('active');
      }
    });

    // Handle window resize
    window.addEventListener('resize', function() {
      const sidebar = document.querySelector('.sidebar');
      const contentArea = document.getElementById('content-area');
      
      if (window.innerWidth <= 768) {
        contentArea.classList.remove('sidebar-open');
      } else if (sidebar.classList.contains('active')) {
        contentArea.classList.add('sidebar-open');
      }
    });

    // Terminal selection function
    function addTerminal(terminal) {
      const url = new URL(window.location.href);
      url.searchParams.set('terminal', terminal);
      window.location.href = url.toString();
    }

    // Initialize DataTable
    $(document).ready(function() {
      if ($('#crossSheetTable').length) {
        var table = $('#crossSheetTable').DataTable({
          dom: 'Bfrtip',
          order: [[3, 'asc'], [1, 'asc']],
          columnDefs: [
            { targets: 4, orderable: false }
          ],
          buttons: [
            {
              extend: 'copy',
              text: '<i class="fas fa-copy"></i> Copy',
              className: 'btn btn-primary btn-sm'
            },
            {
              extend: 'excel',
              text: '<i class="fas fa-file-excel"></i> Excel',
              className: 'btn btn-secondary btn-sm'
            },
            {
              extend: 'pdf',
              text: '<i class="fas fa-file-pdf"></i> PDF',
              className: 'btn btn-primary btn-sm'
            },
            {
              extend: 'print',
              text: '<i class="fas fa-print"></i> Print',
              className: 'btn btn-secondary btn-sm'
            },
            {
              extend: 'colvis',
              text: '<i class="fas fa-columns"></i> Columns',
              className: 'btn btn-primary btn-sm'
            }
          ],
          responsive: true,
          pageLength: -1,
          language: {
            search: '<i class="fas fa-search"></i>',
            searchPlaceholder: 'Search records'
          }
        });

        // Column copy functionality
        $('#crossSheetTable thead th').eq(4).css('cursor', 'pointer').attr('title', 'Click to copy Marks');

        $('#crossSheetTable').on('click', 'thead th:eq(4)', function () {
          var columnIndex = 4;
          var columnData = [];

          // Add header
          var headerText = $(this).text().trim();
          columnData.push(headerText);

          // Add all cell data from this column
          table.column(columnIndex).nodes().each(function (cell) {
            columnData.push($(cell).text().trim());
          });

          // Copy to clipboard
          navigator.clipboard.writeText(columnData.join('\n')).then(function() {
            // Show feedback
            var originalBgColor = $('#crossSheetTable thead th').eq(4).css('background-color');
            $('#crossSheetTable thead th').eq(4).css('background-color', 'var(--secondary)').css('color', 'white');

            setTimeout(function () {
              $('#crossSheetTable thead th').eq(4).css('background-color', originalBgColor).css('color', '');
            }, 500);
          });
        });
      }

      // Subject Class selector event
      $('#subjectClass').on('change', function() {
        if (this.value) {
          window.location.href = this.value;
        }
      });
    });
  </script>
</body>
</html>