<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Form</title>    <link rel="stylesheet" href="/style.css">
    <link rel="stylesheet" href="/form.css">
    <link rel="stylesheet" href="/nav.css">
    <link rel="stylesheet" href="/form-fixes.css">
    <link rel="stylesheet" href="/question-styles.css">
    <link rel="stylesheet" href="/form-header.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

</head>
<body>
   <%- include('./partials/nav',{currentPage:'home'}) %>
    <div class="hero-section">
        <h1 id="firstheading">Answer Evaluation <span id="firstspan">System</span></h1> <br>
        <span class="subheading">A professional system designed to analyze and evaluate student performance</span>
    </div>
    
    <%- include('partials/sidenav', { 
        subjects: subjects, 
        studentClassdata: studentClassdata,
        terminals: terminals 
    }) %>
    
    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="info-card">
                    <div class="info-card-icon">
                        <i class="fas fa-book"></i>
                    </div>
                    <div class="info-card-content">
                        <h3 class="info-card-title">Subject</h3>
                        <div class="info-card-value"><%= subjectname %></div>
                        <div class="mt-2">Class <%= studentClass %> (<%= section %>)</div>
                        <div class="mt-1"><%= terminal %> Term</div>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="info-card info-card-entries">
                    <div class="info-card-icon">
                        <i class="fas fa-users"></i>
                    </div>
                    <div class="info-card-content">
                        <h3 class="info-card-title">Total Student Entries</h3>
                        <div class="info-card-value"><%= totalEntries %></div>
                        <div class="entereddata" style="max-height: 170px; overflow-y: auto;">
                            scroll Down to see all entries <i class="fa-solid fa-arrows-up-down fa-bounce" style="color: #74C0FC;"></i>
                            <table border="1" cellspacing="0" class="table table-striped table-bordered " style="width: 20%; text-align: center;" scroll="yes">
                                <tr>
                                    <th>Roll</th>
                                    <th>Name</th>
                <th>Total Marks</th>
                <th>Action</th>
</tr>
<% totalcountmarks.sort((a, b) => Number(a.roll) - Number(b.roll)); %>
<% totalcountmarks.forEach((marks, index) => { %>
    <tr>
    <td><%=marks.roll %></td>
    <td><%=marks.name %></td>
    <td><%=marks.totalMarks %></td> 
    <td>
     <a href="/edit-student/<%= marks._id %>/<%= marks.subject %>/<%= marks.studentClass %>/<%= marks.section %>/<%=terminal %>?controller=forms" class="action-btn edit-btn">
                        <i class="fas fa-pencil-alt"></i>
                      </a>
                      <a href="/delete-student/<%= marks._id %>/<%= marks.subject %>/<%= marks.studentClass %>/<%= marks.section %>/<%=terminal %>?controller=forms" 
                         onclick="return confirm('Are you sure you want to delete this student?');" 
                         class="action-btn delete-btn">
                        <i class="fas fa-trash-alt"></i>
                      </a></td>
   <% }) %>
   </tr>

             </table> 

                        </div>
                        <div class="mt-2">Class <%= studentClass %> (<%= section %>)</div>
                        <div class="mt-1"><%= terminal %> Term</div>
                       
                    </div>
                </div>
            </div>
        </div>

        
        <div class="form-container mt-4">    <form action="/forms/<%=subjectname%>/<%=studentClass%>/<%=section%>/<%=terminal%>" method="POST">
        
        <section class="mb-5">
            <h2 class="section-title">Student Information</h2>
            <div class="row g-3">
                 <div class="col-md-6">
                    <label for="roll" class="form-label">Roll Number</label>
                    <input type="number" name="roll" id="roll" placeholder="Enter roll number" class="form-control" required>
                </div>
                <div class="col-md-6">

                    <label for="name" class="form-label">Student Name</label>
                    <input type="text" name="name" id="name" placeholder="Enter student name" class="form-control" required>
                </div>
               
                <div class="col-md-3">
                    <label for="studentClass" class="form-label">Class</label>
                    <input type="text" name="studentClass" id="studentClass" value="<%=studentClass%>" class="form-control" readonly required>
                </div>
                <div class="col-md-3">
                    <label for="section" class="form-label">Section</label>
                    <input type="text" name="section" id="section" value="<%=section%>" class="form-control form-control-sm fw-bold text-center bg-light" readonly>
                </div>
                <div class="col-md-3">
                    <label for="subject" class="form-label">Subject</label>
                    <input type="text" name="subject" id="subject" value="<%= subjectname %>" class="form-control" readonly required>
                </div>
                <div class="col-md-3">
                    <label for="terminal" class="form-label">Term</label>
                    <input type="text" name="terminal" id="terminal" value="<%= terminal %>" class="form-control" required placeholder="Add Terminal Name" <%= terminal ? 'readonly' : '' %>>
                </div>
            </div> <h2><center><input type="checkbox" name="absent" id="absent" class="form-check-input mt-1" value="absent" style="border-color: red;color: brown;"> Absent</center></h2>
            <script>
                document.getElementById('absent').addEventListener('change', function() {
                    const questionRadios = document.querySelectorAll('#formDiv input[type="radio"]');
                    if (this.checked) {
                        let totalmarks = document.getElementById('totalmarks');
                        totalmarks.value = 0
                        document.getElementById('formDiv').style.display = 'none'; // Hide the form section
                        questionRadios.forEach(radio => {
                            radio.removeAttribute('required')
                        });
                }
                else {
                    document.getElementById('formDiv').style.display = 'block';
                    questionRadios.forEach(radio => {
        radio.setAttribute('required', true);
      }); // Show the form section
                }
            });
            </script>
        </section>    <section id="formDiv">
        <h2 class="section-title">Question Assessment</h2>
          <% 
        // Find the specific subject from the subjects array
        let subjectData = subjects.find(subject => subject.subject === subjectname && subject.forClass === studentClass);
        
        let max = parseInt(subjectData.max); // Get the max number of questions for the selected subject
        %>
          <div class="question-list">
        <% for (let i = 1; i <= max; i++) { %>
            <% let subQuestionCount = subjectData[i][0] || 0; %>
            <% 
            // For any question with 0 sub-questions, set to 1 sub-question
            // This ensures they all have at least one option group
            if (subQuestionCount <= 0) {
                subQuestionCount = 1;
            }
            %>
            
            <div class="question-card mb-3 border rounded">
                <h2 class="question-header p-3 bg-light border-bottom">
                    Question <%= i %> 
                </h2>
                <div class="question-content p-3">
                    <div class="accordion-body">
                        <!-- Loop through the sub-questions -->
                        <% for (let j = 0; j < subQuestionCount; j++) { %>
                            <% 
                            // For ANY question with 0 sub-questions, explicitly label as "a"
                            const hasNoSubQuestions = subjectData[i] === 0;
                            %>                            
                            <div class="question-section">
                                <h4 class="question-heading">
                                    <% if (hasNoSubQuestions) { %>
                                        Question <%= i %>a 
                                    <% } else { %>
                                        Question <%= i %><%= String.fromCharCode(97 + j) %> FM : <%= subjectData[i.toString()][j+1] %>
                                    <% } %>                                </h4>                                <div class="option-container optionsinfo">
                                    <% 
                                    // Set labels and IDs correctly for ANY question without sub-questions
                                    let subLabel = String.fromCharCode(97 + j);
                                    if (hasNoSubQuestions) {
                                        subLabel = 'a';
                                    }
                                    %>
                                    <% for (let k = 0; k <= parseFloat(subjectData[i.toString()][j+1]); k=k+0.5) { %>
                                        <label for="option<%= i %><%= subLabel %><%= k %>" class="ansradio">
                                            <span class="clabel">
                                                <i class="fas fa-circle mr-2"></i> <%=k%>
                                            </span>
                                            <input type="radio" id="option<%= i %><%= subLabel %><%= k %>" value="<%= k %>" name="q<%= i %><%= subLabel %>" onclick="sum()" required>
                                            
                                        </label>
                                       
                                        <script>
  function sum() {
    let total = 0;
    // Get all radio buttons that are checked
    const selectedOptions = document.querySelectorAll('input[type="radio"]:checked');

    selectedOptions.forEach(option => {
       
      total += parseFloat(option.value);
    });

    let totalmarks = document.getElementById('totalmarks');
    totalmarks.value = total// Update the total marks input

    
  }
</script>

                                    <% } %>

                                  
                                    
                                
                                </div>
                            </div>                        <% } %>
                    </div>
                </div>
            </div>
            
        <% } %>
        </div>
    </section>  
      <div class="text-center">
         <input type="number" name="totalMarks" id="totalmarks" class="form-container" placeholder="Total Marks" step="0.01"> <br>

        <button type="submit" id="submit" class="submit-btn">
            <i class="fas fa-save me-2"></i> Save Assessment
        </button>
    </div>
    </form>
    
    <div class="mt-4 text-center">
        <a href="/" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left me-2"></i> Back to Subjects
        </a>
    </div>      <script>
    // Apply visual cues for completed sections
    document.addEventListener('DOMContentLoaded', function() {
        const questionCards = document.querySelectorAll('.question-card');
        questionCards.forEach((card, index) => {
            // Check if any radio in this section is checked
            const anyChecked = Array.from(card.querySelectorAll('input[type="radio"]')).some(radio => radio.checked);
            
            // Apply visual cue for completed sections
            if (anyChecked) {
                card.querySelector('.question-header').classList.add('bg-success-subtle');
                card.querySelector('.question-header').classList.add('text-success');
            }
        });
    });    </script>






    <!-- script for autofill name -->
     <script>
        const subject = document.getElementById('subject').value.trim();
const studentClass = document.getElementById('studentClass').value.trim();
const section = document.getElementById('section').value.trim();
const terminal = document.getElementById('terminal').value.trim();
let debounceTimeout;

        const rollInput = document.getElementById('roll');
        rollInput.addEventListener('input',async function() {
            clearTimeout(debounceTimeout);

    debounceTimeout = setTimeout(async () => {
      const rollValue = rollInput.value.trim();
      if (!rollValue) return;
        
            
          // Debounce to avoid too many requests

            // logic to check if the input roll number already exist in the database;
            const responseBack = await fetch(`/checkroll/${encodeURIComponent(subject)}/${studentClass}/${encodeURIComponent(section)}/${terminal}?roll=${encodeURIComponent(rollInput.value)}`);
            if (!responseBack.ok) {
                console.error('Error checking roll number:', responseBack.statusText);
                return;
            }
            const rollExists = await responseBack.json();
            console.log(rollExists);
            
            if (rollExists) {
                alert(`Roll number  ${rollExists.roll} with Name ${rollExists.studentName} with Total Marks ${rollExists.totalMarks} already exists for ${rollExists.studentClass}-${rollExists.section} for ${rollExists.terminal} Terminal. Please enter a different roll number or delete previous one.`);
                rollInput.value = ''; // Clear the input
                document.getElementById('name').value = ''; // Clear the name field
                return;
                
            }
            
                // Fetch student data based on the roll number
                // Only fetch if the roll number is valid and does not already exist
             const res = await fetch(`/student_data/${encodeURIComponent(subject)}/${studentClass}/${encodeURIComponent(section)}/${terminal}?roll=${encodeURIComponent(rollInput.value)}`);
            if (!res.ok) {
                console.error('Error fetching student data:', res.statusText);
                return;
            }

            const data = await res.json();
            console.log(data)
            if (data && data.length > 0) {
                // Autofill the other fields with the retrieved data

                
               document.getElementById('name').value = data[0].name || '';
                document.getElementById('roll').value = data[0].roll || '';
            }
        
            // Do something with the data
        }, 600); // Adjust the debounce time as needed
        });
    </script>
    <script src="https://kit.fontawesome.com/368eb67b69.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/form.js"></script>
</body>
</html>