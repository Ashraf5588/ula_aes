<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Navigation</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0&icon_names=add_circle" />
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  
  <style>
    :root {
      --primary: #0ea5e9;
      --primary-dark: #0284c7;
      --secondary: #64748b;
      --success: #10b981;
      --warning: #f59e0b;
      --error: #ef4444;
      --dark: #1e293b;
      --light: #f8fafc;
      --gray: #6b7280;
      --border: #e2e8f0;
    }

    body {
      font-family: 'Inter', sans-serif;
      margin: 0;
      padding: 0;
    }

    .sidebar {
      position: fixed;
      top: 0;
      left: -300px;
      width: 300px;
      height: 100vh;
      background: linear-gradient(180deg, var(--dark) 0%, #334155 100%);
      transition: all 0.3s ease;
      z-index: 999999 !important;
      overflow-y: auto;
      overflow-x: hidden;
      box-shadow: 4px 0 20px rgba(0, 0, 0, 0.1);
      scrollbar-width: thin;
      scrollbar-color: var(--primary) rgba(255, 255, 255, 0.1);
    }

    /* Custom scrollbar for the main sidebar */
    .sidebar::-webkit-scrollbar {
      width: 8px;
    }

    .sidebar::-webkit-scrollbar-track {
      background: rgba(255, 255, 255, 0.05);
      border-radius: 4px;
    }

    .sidebar::-webkit-scrollbar-thumb {
      background: linear-gradient(45deg, var(--primary), var(--primary-dark));
      border-radius: 4px;
    }

    .sidebar::-webkit-scrollbar-thumb:hover {
      background: linear-gradient(45deg, var(--primary-dark), var(--primary));
    }

    .sidebar.active {
      left: 0;
    }

    .sidebar-header {
      padding: 1.5rem;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
      background: rgba(0, 0, 0, 0.2);
    }

    .sidebar-header h3 {
      color: white;
      margin: 0;
      font-weight: 700;
      font-size: 1.2rem;
    }

    .sidebar-header p {
      color: rgba(255, 255, 255, 0.7);
      margin: 0.5rem 0 0 0;
      font-size: 0.875rem;
    }

    .nav-section {
      padding: 1rem 0;
      border-bottom: 1px solid rgba(255, 255, 255, 0.05);
    }

    .nav-section:last-child {
      border-bottom: none;
    }

    .section-title {
      padding: 0.5rem 1.5rem;
      color: var(--primary);
      font-weight: 600;
      font-size: 0.875rem;
      text-transform: uppercase;
      letter-spacing: 1px;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .nav-item {
      position: relative;
    }

    .nav-link {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      padding: 0.75rem 1.5rem;
      color: rgba(255, 255, 255, 0.8);
      text-decoration: none;
      transition: all 0.3s ease;
      cursor: pointer;
      border: none;
      background: none;
      width: 100%;
      text-align: left;
    }

    .nav-link:hover {
      background: rgba(255, 255, 255, 0.1);
      color: white;
      padding-left: 2rem;
    }

    .nav-link.active {
      background: linear-gradient(45deg, var(--primary), var(--primary-dark));
      color: white;
      font-weight: 600;
      box-shadow: 0 2px 8px rgba(14, 165, 233, 0.3);
    }

    .nav-link.active:hover {
      background: linear-gradient(45deg, var(--primary-dark), var(--primary));
      padding-left: 1.5rem;
    }

    .nav-link.active::before {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      height: 100%;
      width: 4px;
      background: white;
      border-radius: 0 4px 4px 0;
    }

    .nav-link.has-submenu::after {
      content: '\f107';
      font-family: 'Font Awesome 6 Free';
      font-weight: 900;
      margin-left: auto;
      transition: transform 0.3s ease;
    }

    .nav-link.has-submenu.expanded::after {
      transform: rotate(180deg);
    }

    .submenu {
      max-height: 0;
      overflow: hidden;
      transition: max-height 0.3s ease;
      background: rgba(0, 0, 0, 0.2);
    }

    .submenu.expanded {
      max-height: 60vh; /* Use viewport height for better responsiveness */
      overflow-y: auto; /* Allow vertical scrolling */
      scrollbar-width: thin; /* For Firefox */
      scrollbar-color: var(--primary) rgba(255, 255, 255, 0.1); /* For Firefox */
    }

    /* Custom scrollbar for webkit browsers */
    .submenu.expanded::-webkit-scrollbar {
      width: 6px;
    }

    .submenu.expanded::-webkit-scrollbar-track {
      background: rgba(255, 255, 255, 0.1);
      border-radius: 3px;
    }

    .submenu.expanded::-webkit-scrollbar-thumb {
      background: var(--primary);
      border-radius: 3px;
    }

    .submenu.expanded::-webkit-scrollbar-thumb:hover {
      background: var(--primary-dark);
    }

    .submenu .nav-link {
      padding-left: 3rem;
      font-size: 0.875rem;
      color: rgba(255, 255, 255, 0.7);
    }

    .submenu .nav-link:hover {
      padding-left: 3.5rem;
      color: var(--primary);
    }

    .submenu .nav-link.active {
      background: linear-gradient(45deg, var(--primary), var(--primary-dark));
      color: white;
      font-weight: 600;
      padding-left: 3rem;
    }

    .submenu .nav-link.active:hover {
      padding-left: 3rem;
    }

    .subject-submenu {
      background: rgba(0, 0, 0, 0.3);
    }

    .subject-submenu.expanded {
      max-height: 50vh; /* Specific height for nested submenus */
      overflow-y: auto;
    }

    .subject-submenu .nav-link {
      padding-left: 4rem;
      font-size: 0.8rem;
    }

    .subject-submenu .nav-link.active {
      background: linear-gradient(45deg, var(--primary), var(--primary-dark));
      color: white;
      font-weight: 600;
      padding-left: 4rem;
    }

    .subject-submenu .nav-link.active:hover {
      padding-left: 4rem;
    }

    .class-submenu {
      background: rgba(0, 0, 0, 0.4);
    }

    .class-submenu.expanded {
      max-height: 40vh; /* Specific height for deeply nested submenus */
      overflow-y: auto;
    }

    .class-submenu .nav-link {
      padding-left: 5rem;
      font-size: 0.75rem;
    }

    .toggle-btn {
      position: fixed;
      top: 20px;
      left: 20px;
      z-index: 1001;
      background: rgb(190, 37, 37);
      color: white;
      border: none;
      padding: 0.75rem;
      border-radius: 50%;
      width: 50px;
      height: 50px;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      box-shadow: 0 4px 12px rgba(14, 165, 233, 0.3);
      transition: all 0.3s ease;
    }

    .toggle-btn:hover {
      background: var(--primary-dark);
      transform: scale(1.1);
    }

    .overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      z-index: 999;
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s ease;
    }

    .overlay.active {
      opacity: 1;
      visibility: visible;
    }

    .badge {
      background: var(--primary);
      color: white;
      font-size: 0.7rem;
      padding: 0.2rem 0.5rem;
      border-radius: 10px;
      margin-left: auto;
    }

    /* Mobile Responsive */
    @media (max-width: 768px) {
      .sidebar {
        width: 280px;
      }

      .toggle-btn {
        top: 15px;
        left: 15px;
        width: 45px;
        height: 45px;
      }
    }

    /* Terminal Selection Modal */
    .terminal-modal {
      display: none;
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background: white;
      border-radius: 15px;
      padding: 2rem;
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
      z-index: 1002;
      min-width: 300px;
    }

    .terminal-modal.active {
      display: block;
    }

    .terminal-modal h4 {
      color: var(--dark);
      margin-bottom: 1rem;
      text-align: center;
    }

    .terminal-option {
      display: block;
      width: 100%;
      padding: 0.75rem;
      margin-bottom: 0.5rem;
      background: var(--light);
      border: 2px solid var(--border);
      border-radius: 8px;
      text-decoration: none;
      color: var(--dark);
      transition: all 0.3s ease;
    }

    .terminal-option:hover {
      background: var(--primary);
      color: white;
      border-color: var(--primary);
    }
  </style>
</head>
<body>
  <!-- Toggle Button -->
  <button class="toggle-btn" id="sidebarToggle" style="z-index: 10000000000000000 !important;">
    <i class="fas fa-bars"></i>
  </button>

  <!-- Overlay -->
  <div class="overlay" id="overlay"></div>

  <!-- Sidebar -->
  <nav class="sidebar" id="sidebar">
    <!-- Header -->
    <div class="sidebar-header">
      <h3><i class="fas fa-graduation-cap me-2"></i>Answer Analysis</h3>
      <p>Comprehensive Education Management System</p>
    </div>
      <!-- Student Section -->
    <div class="nav-section">
      <div class="section-title">
        <i class="fas fa-user-graduate"></i>
        Student Portal
      </div>
      
      <div class="nav-item">
        <a href="/" class="nav-link">
          <i class="fas fa-home"></i>
          Home
        </a>
      </div>

      <div class="nav-item">
        <button class="nav-link has-submenu" data-submenu="student-forms">
          <i class="fas fa-edit"></i>
          Answer Forms
        </button>
        <div class="submenu" id="student-forms">
          <% if (typeof subjects !== 'undefined' && subjects && subjects.length > 0) { %>
            <% const uniqueSubjects = [...new Set(subjects.map(item => item.subject).filter(Boolean))]; %>
            <% uniqueSubjects.forEach((sub) => { %>
              <% if (sub && typeof sub === 'string') { %>
                <div class="nav-item">
                  <button class="nav-link has-submenu" data-submenu="form-<%= sub.replace(/\s+/g, '-') %>">
                    <i class="fas fa-file-edit"></i>
                    <%= sub %>
                  </button>
                  <div class="submenu subject-submenu" id="form-<%= sub.replace(/\s+/g, '-') %>">
                    <% if (typeof studentClassdata !== 'undefined' && studentClassdata && studentClassdata.length > 0) { %>
                      <% studentClassdata.forEach((studentclass) => { %>
                        <button class="nav-link" onclick="selectTerminalForForm('<%= sub %>', '<%= studentclass.studentClass %>', '<%= studentclass.section %>')">
                          <i class="fas fa-pencil-alt"></i>
                          Class <%= studentclass.studentClass %>-<%= studentclass.section %>
                        </button>
                      <% }) %>
                    <% } %>
                  </div>
                </div>
              <% } %>
            <% }) %>
          <% } %>
        </div>
      </div>
    </div>

    <!-- Teacher Section -->
    <div class="nav-section">
      <div class="section-title">
        <i class="fas fa-chalkboard-teacher"></i>
        Teacher Panel
      </div>
      
      <!-- Data Entry -->
      <div class="nav-item">
        <button class="nav-link has-submenu" data-submenu="data-entry">
          <i class="fas fa-keyboard"></i>
          View Report
        </button>
        <div class="submenu" id="data-entry">
          <% if (typeof subjects !== 'undefined' && subjects && subjects.length > 0) { %>
            <% const uniqueSubjects = [...new Set(subjects.map(item => item.subject).filter(Boolean))]; %>
            <% uniqueSubjects.forEach((sub) => { %>
              <% if (sub && typeof sub === 'string') { %>
                <div class="nav-item">
                  <button class="nav-link has-submenu" data-submenu="subject-<%= sub.replace(/\s+/g, '-') %>">
                    <i class="fas fa-book"></i>
                    <%= sub %>
                  </button>
                  <div class="submenu subject-submenu" id="subject-<%= sub.replace(/\s+/g, '-') %>">
                    <% if (typeof studentClassdata !== 'undefined' && studentClassdata && studentClassdata.length > 0) { %>
                      <% studentClassdata.forEach((studentclass) => { %>
                        <button class="nav-link" onclick="selectTerminalForEntry('<%= sub %>', '<%= studentclass.studentClass %>', '<%= studentclass.section %>')">
                          <i class="fas fa-users"></i>
                          Class <%= studentclass.studentClass %>-<%= studentclass.section %>
                        </button>
                      <% }) %>
                    <% } else { %>
                      <div class="nav-link">
                        <i class="fas fa-exclamation-circle"></i>
                        No classes available
                      </div>
                    <% } %>
                  </div>
                </div>
              <% } %>
            <% }) %>
          <% } else { %>
            <div class="nav-link">
              <i class="fas fa-exclamation-circle"></i>
              No subjects available
            </div>
          <% } %>
        </div>
      </div>

 
      
      
      <!-- System Management -->
      <div class="nav-item">
        <button class="nav-link has-submenu" data-submenu="system-mgmt">
          <i class="fas fa-cogs"></i>
          System Management
        </button>
        <div class="submenu" id="system-mgmt">
          <a href="/admin/new/subject" class="nav-link">
            <i class="fas fa-plus-circle"></i>
            Add New Subject
          </a>
          <a href="/admin/terminal" class="nav-link">
            <i class="fas fa-calendar-plus"></i>
            Add Terminal
          </a>
          <a href="/admin/subject" class="nav-link">
            <i class="fas fa-book-open"></i>
            Manage Question Format
          </a>
          <a href="/admin/class" class="nav-link">
            <i class="fas fa-school"></i>
            Manage Classes
          </a>
        </div>
      </div>

      <!-- Reports & Analytics -->
      <div class="nav-item">
        <button class="nav-link has-submenu" data-submenu="admin-reports">
          <i class="fas fa-chart-pie"></i>
          Reports & Analytics
        </button>
        <div class="submenu" id="admin-reports">
          <a href="/admin/term/FIRST" class="nav-link">
            <i class="fas fa-table"></i>
            Entry Overview
          </a>
          <button class="nav-link" onclick="showTerminalSelector('admin-report')">
            <i class="fas fa-chart-bar"></i>
            Terminal Analysis
          </button>
        </div>
      </div>

      <!-- File Management -->
      <div class="nav-item">
        <a href="/admin/subject" class="nav-link">
          <i class="fas fa-file-upload"></i>
          Question Papers
        </a>
      </div>
    </div>

    <!-- Student Records -->
    <div class="nav-section">
      <div class="section-title">
        <i class="fas fa-user-graduate"></i>
        Student Records
      </div>
      
      <div class="nav-item">
        <a href="/studentrecord" class="nav-link">
          <i class="fas fa-file-alt"></i>
          School Record
        </a>
      </div>
      
      <div class="nav-item">
        <a href="/crossheet" class="nav-link">
          <i class="fas fa-file-excel"></i>
          Generate Marks Slip
        </a>
      </div>
    </div>
    
    <!-- Admin Section -->
    <div class="nav-section">
      <div class="section-title">
        <i class="fas fa-chalkboard-teacher"></i>
        Admin Panel
      </div>
      
      <div class="nav-item">
        <a href="/admin/term/FIRST" class="nav-link">
          <i class="fas fa-tachometer-alt"></i>
          Admin Dashboard
        </a>
      </div>
    </div>

    <!-- Quick Actions -->
    <div class="nav-section">
      <div class="section-title">
        <i class="fas fa-bolt"></i>
        Quick Actions
      </div>
      
      <div class="nav-item">
        <a href="/admin/login" class="nav-link">
          <i class="fas fa-sign-in-alt"></i>
          Admin Login
        </a>
      </div>
      
     
      

    </div>
  </nav>

  <!-- Terminal Selection Modal -->
  <div class="terminal-modal" id="terminalModal">
    <h4><i class="fas fa-calendar-alt me-2"></i>Select Terminal</h4>
    <div id="terminalOptions">
      <!-- Terminal options will be populated by JavaScript -->
    </div>
    <button class="btn btn-secondary mt-3 w-100" onclick="closeTerminalModal()">
      <i class="fas fa-times me-2"></i>Cancel
    </button>
  </div>

  <!-- JavaScript -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  
  <script>
    // Global variables for current selection
    let currentSubject = '';
    let currentClass = '';
    let currentSection = '';
    let currentAction = '';

    // Available terminals from backend (converted to uppercase)
    const terminals = [
      <% if (typeof terminals !== 'undefined' && terminals && terminals.length > 0) { %>
        <% terminals.forEach((term, index) => { %>
          '<%= term.terminal.toUpperCase() %>'<%= index < terminals.length - 1 ? ',' : '' %>
        <% }) %>
      <% } else { %>
        'FIRST', 'SECOND', 'THIRD', 'FINAL'
      <% } %>
    ];

    // Toggle sidebar
    document.getElementById('sidebarToggle').addEventListener('click', function() {
      const sidebar = document.getElementById('sidebar');
      const overlay = document.getElementById('overlay');
      
      sidebar.classList.toggle('active');
      overlay.classList.toggle('active');
    });

    // Close sidebar when overlay is clicked
    document.getElementById('overlay').addEventListener('click', function() {
      const sidebar = document.getElementById('sidebar');
      const overlay = document.getElementById('overlay');
      
      sidebar.classList.remove('active');
      overlay.classList.remove('active');
    });

    // Submenu toggle functionality
    document.querySelectorAll('.nav-link.has-submenu').forEach(button => {
      button.addEventListener('click', function() {
        const submenuId = this.getAttribute('data-submenu');
        const submenu = document.getElementById(submenuId);
        
        // Close other submenus at the same level
        const siblingSubmenus = this.parentNode.parentNode.querySelectorAll('.submenu');
        siblingSubmenus.forEach(menu => {
          if (menu.id !== submenuId) {
            menu.classList.remove('expanded');
            menu.previousElementSibling.classList.remove('expanded');
          }
        });
        
        // Toggle current submenu
        submenu.classList.toggle('expanded');
        this.classList.toggle('expanded');
      });
    });

    // Terminal selection functions
    function selectTerminalForEntry(subject, studentClass, section) {
      currentSubject = subject;
      currentClass = studentClass;
      currentSection = section;
      currentAction = 'entry';
      showTerminalModal();
    }

    function selectTerminalForReport(subject, studentClass, section) {
      currentSubject = subject;
      currentClass = studentClass;
      currentSection = section;
      currentAction = 'report';
      showTerminalModal();
    }

    function selectTerminalForForm(subject, studentClass, section) {
      currentSubject = subject;
      currentClass = studentClass;
      currentSection = section;
      currentAction = 'form';
      showTerminalModal();
    }

    function showTerminalSelector(action) {
      currentAction = action;
      showTerminalModal();
    }

    function showTerminalModal() {
      const modal = document.getElementById('terminalModal');
      const overlay = document.getElementById('overlay');
      const optionsContainer = document.getElementById('terminalOptions');
      
      // Clear previous options
      optionsContainer.innerHTML = '';
      
      // Add terminal options
      terminals.forEach(terminal => {
        const option = document.createElement('a');
        option.className = 'terminal-option';
        option.href = '#';
        option.innerHTML = `<i class="fas fa-calendar me-2"></i>${terminal} Terminal`;
        option.onclick = () => navigateToTerminal(terminal.toUpperCase());
        optionsContainer.appendChild(option);
      });
      
      modal.classList.add('active');
      overlay.classList.add('active');
    }

    function closeTerminalModal() {
      const modal = document.getElementById('terminalModal');
      const overlay = document.getElementById('overlay');
      
      modal.classList.remove('active');
      overlay.classList.remove('active');
    }

    function navigateToTerminal(terminal) {
      let url = '';
      
      switch(currentAction) {
        case 'entry':
          url = `/findData/${currentSubject}/${currentClass}/${currentSection}/${terminal}`;
          break;
        case 'report':
          url = `/studentData/${currentSubject}/${currentClass}/${currentSection}/1/status/${terminal}`;
          break;
        case 'form':
          url = `/forms/${currentSubject}/${currentClass}/${currentSection}/${terminal}`;
          break;
        case 'admin-report':
          url = `/admin/term/${terminal}`;
          break;
        default:
          url = `/admin/term/${terminal}`;
      }
      
      closeTerminalModal();
      window.location.href = url;
    }

    // Close sidebar when a link is clicked (for mobile)
    document.querySelectorAll('.nav-link[href]').forEach(link => {
      link.addEventListener('click', function() {
        if (window.innerWidth <= 768) {
          const sidebar = document.getElementById('sidebar');
          const overlay = document.getElementById('overlay');
          
          sidebar.classList.remove('active');
          overlay.classList.remove('active');
        }
      });
    });

    // Close sidebar on window resize if it's large screen
    window.addEventListener('resize', function() {
      if (window.innerWidth > 768) {
        const sidebar = document.getElementById('sidebar');
        const overlay = document.getElementById('overlay');
        
        sidebar.classList.remove('active');
        overlay.classList.remove('active');
      }
    });

    // Set active link based on current page URL
    function setActiveLink() {
      const currentPath = window.location.pathname;
      const currentUrl = window.location.href;
      
      // Remove active class from all nav links
      document.querySelectorAll('.nav-link').forEach(link => {
        link.classList.remove('active');
      });
      
      // Find and set active link
      document.querySelectorAll('.nav-link[href]').forEach(link => {
        const linkHref = link.getAttribute('href');
        
        // Check for exact match first
        if (linkHref === currentPath) {
          link.classList.add('active');
        }
        // Check for partial match for admin routes
        else if (currentPath.includes('/admin/') && linkHref.includes('/admin/')) {
          if (currentPath.includes('term') && linkHref.includes('term')) {
            link.classList.add('active');
          }
          else if (currentPath.includes('subject') && linkHref.includes('subject')) {
            link.classList.add('active');
          }
          else if (currentPath.includes('class') && linkHref.includes('class')) {
            link.classList.add('active');
          }
          else if (currentPath.includes('terminal') && linkHref.includes('terminal')) {
            link.classList.add('active');
          }
          else if (currentPath.includes('login') && linkHref.includes('login')) {
            link.classList.add('active');
          }
        }
        // Check for teacher routes
        else if (currentPath.includes('/teacher/') && linkHref.includes('/teacher/')) {
          link.classList.add('active');
        }
        // Check for student routes
        else if (currentPath.includes('/student/') && linkHref.includes('/student/')) {
          link.classList.add('active');
        }
        // Check for forms routes
        else if (currentPath.includes('/forms/') && linkHref.includes('/forms/')) {
          link.classList.add('active');
        }
        // Check for crossheet
        else if (currentPath.includes('crossheet') && linkHref.includes('crossheet')) {
          link.classList.add('active');
        }
        // Check for findData routes
        else if (currentPath.includes('/findData/') && linkHref.includes('/findData/')) {
          link.classList.add('active');
        }
        // Check for studentData routes
        else if (currentPath.includes('/studentData/') && linkHref.includes('/studentData/')) {
          link.classList.add('active');
        }
        // Check for home page
        else if (currentPath === '/' && linkHref === '/') {
          link.classList.add('active');
        }
      });
      
      // Auto-expand submenu if it contains active link
      document.querySelectorAll('.nav-link.active').forEach(activeLink => {
        let parent = activeLink.closest('.submenu');
        while (parent) {
          parent.classList.add('expanded');
          const parentButton = parent.previousElementSibling;
          if (parentButton && parentButton.classList.contains('has-submenu')) {
            parentButton.classList.add('expanded');
          }
          parent = parent.parentElement.closest('.submenu');
        }
      });
    }

    // Set active link on page load
    document.addEventListener('DOMContentLoaded', setActiveLink);
    
    // Update active link when navigating (for SPAs)
    window.addEventListener('popstate', setActiveLink);
  </script>
</body>
</html>